version: 2.1

variables:
  update_conda: &update_conda
    run:
      name: Update conda
      command: conda update --yes conda
  install_libmambasolver: &install_libmambasolver
    run:
      name: Install libmambasolver
      command: conda install -n base conda-libmamba-solver
  create_conda_env: &create_conda_env
    run:
      name: create conda env
      command: conda create -n kipoi-dev python=<< parameters.python-version >>
  install_kipoi_utils: &install_kipoi_utils
    run:
      name: Install Kipoi Utils
      command: |
        source activate kipoi-dev
        git clone git@github.com:kipoi/kipoi-utils kipoi_utils_pkg
        cd kipoi_utils_pkg
        pip install '.'
        cd ..
  install_psutils: &install_psutils
    run:
      name: Install psutil
      command: |
        source activate kipoi-dev
        conda install psutil --yes
  install_kipoi_conda: &install_kipoi_conda
    run:
      name: Install kipoi_conda
      command: |
        source activate kipoi-dev
        pip install '.[develop]'
  install_requests: &install_requests
    run:
      name: Install requirements for requests correctly
      command: |
        source activate kipoi-dev
        pip install requests
  run_tests: &run_tests
    run:
      name: Run tests
      command: |
        mkdir test-reports
        source activate kipoi-dev
        py.test --cov=kipoi_conda/ tests/ -n 1 --no-cov-on-fail --junitxml=test-reports/junit.xml
  run_coveralls: &run_coveralls
    run:
      name: run coveralls
      command: 
        source activate kipoi-dev
        coveralls || true
  store_test_results: &store_test_results
    store_test_results:
      path: test-reports
  store_test_artifacts: &store_test_artifacts
    store_artifacts:
      path: test-reports
      destination: test-reports    
  build_pypi_package: &build_pypi_package
    run:
      name: build python packages
      command: |
        source activate kipoi-dev
        python setup.py sdist bdist_wheel
  conda_install_twine: &conda_install_twine
    run:
      name: Install twine
      command: |
        source activate kipoi-dev
        conda install twine
  pypi_create_pypirc: &pypi_create_pypirc
    run:
      name: init .pypirc
      command: |
        echo -e "[distutils]" >> ~/.pypirc
        echo -e "index-servers = " >> ~/.pypirc
        echo -e "    pypi" >> ~/.pypirc
        echo -e "    testpypi" >> ~/.pypirc
        echo -e "" >> ~/.pypirc
        echo -e "[testpypi]" >> ~/.pypirc
        echo -e "repository: https://test.pypi.org/legacy/" >> ~/.pypirc
        echo -e "username: $TEST_PYPI_USERNAME" >> ~/.pypirc
        echo -e "password: $TEST_PYPI_PASSWORD" >> ~/.pypirc
        echo -e "[pypi]" >> ~/.pypirc
        echo -e "username: $PYPI_USERNAME" >> ~/.pypirc
        echo -e "password: $PYPI_PASSWORD" >> ~/.pypirc

jobs:

  test:
    parameters:
      python-version:
        type: string
    docker:
      - image: continuumio/miniconda3:latest
    working_directory: ~/repo
    steps:
      - checkout
      - *update_conda
      - *install_libmambasolver
      - *create_conda_env
      - *install_psutils
      - *install_kipoi_utils
      - *install_kipoi_conda
      - *run_tests
      - *run_coveralls
      - *store_test_results
      - *store_test_artifacts  
  test-deploy-pypi:
    parameters:
      python-version:
        type: string
        default: "3.9"
    docker:
      - image: continuumio/miniconda3:latest
    working_directory: ~/repo
    steps:
      - checkout
      - *update_conda
      - *install_libmambasolver
      - *create_conda_env
      - *install_psutils
      - *install_kipoi_utils
      - *install_kipoi_conda
      - *run_tests
      - *build_pypi_package
      - *conda_install_twine
      - *pypi_create_pypirc
      - run:
          name: check if commit is tagged
          command: git describe --exact-match --tags HEAD && echo "commit is tagged; continuing" || circleci step halt
      - run:
          name: upload to TestPyPI
          command: twine upload --repository testpypi dist/* --verbose
      - run:
          name: pip install from TestPyPI
          command: |
            source activate kipoi-dev
            python -m pip install --user --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple kipoi_conda --verbose
            python -c "import kipoi_conda; print(kipoi_conda.__version__)"    
  productive-deploy-pypi:
    parameters:
      python-version:
        type: string
        default: "3.9"
    docker:
      - image: continuumio/miniconda3:latest
    working_directory: ~/repo
    steps:
      - checkout
      - *update_conda
      - *install_libmambasolver
      - *create_conda_env
      - *install_psutils
      - *install_kipoi_utils
      - *install_kipoi_conda
      - *run_tests
      - *build_pypi_package
      - *conda_install_twine
      - *pypi_create_pypirc
      - run:
          name: check if commit is tagged
          command: git describe --exact-match --tags HEAD && echo "commit is tagged; continuing" || circleci step halt
      - run:
          name: upload to PyPI
          command: |
            source activate kipoi-dev
            twine upload --repository pypi dist/* --verbose
      - run:
          name: pip install from PyPI
          command: |
            source activate kipoi-dev
            python -m pip install --user kipoi_conda --verbose
            python -c "import kipoi_conda; print(kipoi_conda.__version__)"   


workflows:
  version: 2.1
  test:
    jobs:
      - test:
          matrix:
            parameters:
              python-version: ["3.8", "3.9", "3.10"]
      - test-deploy-pypi:
          requires:
            - test
          filters:
            branches:
              only:
                - add-pypi-deployment   
                - add-more-python-versions             
      - productive-deploy-pypi:
          requires:
            - test
          filters:
            branches:
              only:
                - master
                - add-more-python-versions
